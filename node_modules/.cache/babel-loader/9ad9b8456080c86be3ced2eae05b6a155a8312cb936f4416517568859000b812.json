{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diuve\\\\Documents\\\\CecytemGitHubYJira\\\\Practica4_1\\\\recomendaciones-ia\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\nimport './App.css';\nimport peliculas from './data/peliculas.json';\nfunction App() {\nconst [input, setInput] = useState('');\nconst [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\nconst [recomendacionIA, setRecomendacionIA] = useState('');\nconst [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\nconst handleBuscarTexto = () => {\nconst texto = input.toLowerCase();\nconst filtradas = peliculas.filter((peli) =>\npeli.titulo.toLowerCase().includes(texto) ||\npeli.genero.toLowerCase().includes(texto) ||\npeli.titulo.toLowerCase().startsWith(texto)\n);\nsetPeliculasFiltradas(filtradas);\nsetPeliculasRecomendadas([]);\nsetRecomendacionIA('');\n};\nconst handleBuscarDescripcion = async () => {\nsetRecomendacionIA('Pensando...');\nsetPeliculasRecomendadas([]);\nsetPeliculasFiltradas([]);\ntry {\nconst response = await fetch('/api/recomendaciones', {\nmethod: 'POST',\nheaders: { 'Content-Type': 'application/json' },\nbody: JSON.stringify({\nprompt: `Tengo una base de datos con estas pel√≠culas: ${peliculas.\nmap(p => p.titulo).join(', ')}.\nQuiero que me digas solo los t√≠tulos de las pel√≠culas que coincidan con esta\ndescripci√≥n: \"${input}\".\nDevu√©lveme √∫nicamente los t√≠tulos separados por comas.`\n}),\n});\nconst data = await response.json();\nconst textoIA = data.recomendacion.toLowerCase();\nsetRecomendacionIA(data.recomendacion);\nconst coincidencias = peliculas.filter((peli) =>\ntextoIA.includes(peli.titulo.toLowerCase())\n);\nsetPeliculasRecomendadas(coincidencias);\n} catch (err) {\nsetRecomendacionIA('‚ùå Error al obtener recomendaci√≥n IA.');\n}\n};\nreturn (\n<div className=\"App\">\n<h1 className=\"titulo\">CECYFLIX</h1>\n<div className=\"buscador\">\n<input\ntype=\"text\"\nplaceholder=\"¬øQu√© te gustar√≠a ver hoy?\"\nvalue={input}\nonChange={(e) => setInput(e.target.value)}\nrequired\n/>\n<button onClick={handleBuscarTexto}>Buscar</button>\n<button onClick={handleBuscarDescripcion} className=\"btn-ia\">\nBuscar por descripci√≥n</button>\n</div>\n{recomendacionIA && (\n<div className=\"bloque-recomendaciones\">\n<h2>‚ú® Recomendaci√≥n IA</h2>\n<p>{recomendacionIA}</p>\n</div>\n)}\n{peliculasRecomendadas.length > 0 && (\n<div className=\"galeria\">\n<h2>üéû Pel√≠culas recomendadas por IA</h2>\n<div className=\"grid\">\n{peliculasRecomendadas.map((peli) => (\n<div className=\"tarjeta\" key={peli.id}>\n<img src={peli.poster} alt={peli.titulo} />\n<div className=\"info\">\n<h3>{peli.titulo}</h3>\n<p>{peli.descripcion}</p>\n<span>{peli.genero}</span>\n</div>\n</div>\n))}\n</div>\n</div>\n)}\n{peliculasFiltradas.length > 0 && (\n<div className=\"galeria\">\n<h2>üé¨ Todas las pel√≠culas</h2>\n<div className=\"grid\">\n{peliculasFiltradas.map((peli) => (\n<div className=\"tarjeta\" key={peli.id}>\n<img src={peli.poster} alt={peli.titulo} />\n<div className=\"info\">\n<h3>{peli.titulo}</h3>\n<p>{peli.descripcion}</p>\n<span>{peli.genero}</span>\n</div>\n</div>\n))}\n</div>\n</div>\n)}\n</div>\n);\n}\nexport default App;*/\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [peliculas, setPeliculas] = useState([]);\n  const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n  const [busqueda, setBusqueda] = useState('');\n  const [modoDescripcion, setModoDescripcion] = useState(false);\n  const [recomendacion, setRecomendacion] = useState('');\n  useEffect(() => {\n    fetch('/api/peliculas').then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        setPeliculas(data);\n        setPeliculasFiltradas(data);\n      } else {\n        console.error('Error: Los datos recibidos no son un array:', data);\n        setPeliculas([]);\n        setPeliculasFiltradas([]);\n      }\n    }).catch(err => {\n      console.error('Error al obtener pel√≠culas:', err);\n      setPeliculas([]);\n      setPeliculasFiltradas([]);\n    });\n  }, []);\n  const handleBuscar = e => {\n    e.preventDefault();\n    const texto = busqueda.toLowerCase();\n    const resultado = peliculas.filter(p => p.titulo.toLowerCase().includes(texto) || p.genero.toLowerCase().includes(texto) || p.titulo.toLowerCase().startsWith(texto));\n    setPeliculasFiltradas(resultado);\n    setRecomendacion('');\n  };\n  const handleBuscarPorDescripcion = async () => {\n    setRecomendacion('Pensando...');\n    try {\n      const res = await fetch('/api/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: `Eres un asistente de recomendaciones de pel√≠culas que SIEMPRE responde en espa√±ol.\n\nDame una recomendaci√≥n basada en esta descripci√≥n: \"${busqueda}\". \n\nUsa solo pel√≠culas de este cat√°logo: ${peliculas.map(p => p.titulo).join(', ')}.\n\nIMPORTANTE: \n- Responde √öNICAMENTE en espa√±ol\n- Menciona los t√≠tulos de las pel√≠culas que recomiendes\n- Da una breve explicaci√≥n de por qu√© las recomiendas`\n        })\n      });\n      const data = await res.json();\n      setRecomendacion(data.recomendacion);\n      const seleccionadas = peliculas.filter(p => data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase()));\n      if (seleccionadas.length > 0) {\n        setPeliculasFiltradas(seleccionadas);\n      }\n    } catch (err) {\n      console.error('Error con IA:', err);\n      setRecomendacion('‚ùå Error al obtener recomendaci√≥n. Por favor, verifica que el servidor est√© funcionando.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"CECYFLIX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"buscador\",\n      onSubmit: handleBuscar,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por t√≠tulo o g√©nero',\n        value: busqueda,\n        onChange: e => setBusqueda(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleBuscarPorDescripcion,\n        className: \"btn-ia\",\n        children: \"Buscar por descripci\\xF3n IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 1\n    }, this), recomendacion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bloque-recomendaciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u2728 IA sugiere:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recomendacion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"galeria\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDFAC Pel\\xEDculas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: peliculasFiltradas.map((p, i) => {\n          var _p$descripcion;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tarjeta\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: p.poster,\n              alt: p.titulo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: p.titulo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: p.genero\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [(_p$descripcion = p.descripcion) === null || _p$descripcion === void 0 ? void 0 : _p$descripcion.slice(0, 60), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 1\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 1\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"7dl2JW6kaHNERAH9j0sOGRRFNCk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","peliculas","setPeliculas","peliculasFiltradas","setPeliculasFiltradas","busqueda","setBusqueda","modoDescripcion","setModoDescripcion","recomendacion","setRecomendacion","fetch","then","res","json","data","Array","isArray","console","error","catch","err","handleBuscar","e","preventDefault","texto","toLowerCase","resultado","filter","p","titulo","includes","genero","startsWith","handleBuscarPorDescripcion","method","headers","body","JSON","stringify","prompt","map","join","seleccionadas","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","i","_p$descripcion","src","poster","alt","descripcion","slice","_c","$RefreshReg$"],"sources":["C:/Users/diuve/Documents/CecytemGitHubYJira/Practica4_1/recomendaciones-ia/src/App.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport './App.css';\nimport peliculas from './data/peliculas.json';\nfunction App() {\nconst [input, setInput] = useState('');\nconst [peliculasFiltradas, setPeliculasFiltradas] = useState(peliculas);\nconst [recomendacionIA, setRecomendacionIA] = useState('');\nconst [peliculasRecomendadas, setPeliculasRecomendadas] = useState([]);\nconst handleBuscarTexto = () => {\nconst texto = input.toLowerCase();\nconst filtradas = peliculas.filter((peli) =>\npeli.titulo.toLowerCase().includes(texto) ||\npeli.genero.toLowerCase().includes(texto) ||\npeli.titulo.toLowerCase().startsWith(texto)\n);\nsetPeliculasFiltradas(filtradas);\nsetPeliculasRecomendadas([]);\nsetRecomendacionIA('');\n};\nconst handleBuscarDescripcion = async () => {\nsetRecomendacionIA('Pensando...');\nsetPeliculasRecomendadas([]);\nsetPeliculasFiltradas([]);\ntry {\nconst response = await fetch('/api/recomendaciones', {\nmethod: 'POST',\nheaders: { 'Content-Type': 'application/json' },\nbody: JSON.stringify({\nprompt: `Tengo una base de datos con estas pel√≠culas: ${peliculas.\nmap(p => p.titulo).join(', ')}.\nQuiero que me digas solo los t√≠tulos de las pel√≠culas que coincidan con esta\ndescripci√≥n: \"${input}\".\nDevu√©lveme √∫nicamente los t√≠tulos separados por comas.`\n}),\n});\nconst data = await response.json();\nconst textoIA = data.recomendacion.toLowerCase();\nsetRecomendacionIA(data.recomendacion);\nconst coincidencias = peliculas.filter((peli) =>\ntextoIA.includes(peli.titulo.toLowerCase())\n);\nsetPeliculasRecomendadas(coincidencias);\n} catch (err) {\nsetRecomendacionIA('‚ùå Error al obtener recomendaci√≥n IA.');\n}\n};\nreturn (\n<div className=\"App\">\n<h1 className=\"titulo\">CECYFLIX</h1>\n<div className=\"buscador\">\n<input\ntype=\"text\"\nplaceholder=\"¬øQu√© te gustar√≠a ver hoy?\"\nvalue={input}\nonChange={(e) => setInput(e.target.value)}\nrequired\n/>\n<button onClick={handleBuscarTexto}>Buscar</button>\n<button onClick={handleBuscarDescripcion} className=\"btn-ia\">\nBuscar por descripci√≥n</button>\n</div>\n{recomendacionIA && (\n<div className=\"bloque-recomendaciones\">\n<h2>‚ú® Recomendaci√≥n IA</h2>\n<p>{recomendacionIA}</p>\n</div>\n)}\n{peliculasRecomendadas.length > 0 && (\n<div className=\"galeria\">\n<h2>üéû Pel√≠culas recomendadas por IA</h2>\n<div className=\"grid\">\n{peliculasRecomendadas.map((peli) => (\n<div className=\"tarjeta\" key={peli.id}>\n<img src={peli.poster} alt={peli.titulo} />\n<div className=\"info\">\n<h3>{peli.titulo}</h3>\n<p>{peli.descripcion}</p>\n<span>{peli.genero}</span>\n</div>\n</div>\n))}\n</div>\n</div>\n)}\n{peliculasFiltradas.length > 0 && (\n<div className=\"galeria\">\n<h2>üé¨ Todas las pel√≠culas</h2>\n<div className=\"grid\">\n{peliculasFiltradas.map((peli) => (\n<div className=\"tarjeta\" key={peli.id}>\n<img src={peli.poster} alt={peli.titulo} />\n<div className=\"info\">\n<h3>{peli.titulo}</h3>\n<p>{peli.descripcion}</p>\n<span>{peli.genero}</span>\n</div>\n</div>\n))}\n</div>\n</div>\n)}\n</div>\n);\n}\nexport default App;*/\n\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nfunction App() {\n\nconst [peliculas, setPeliculas] = useState([]);\nconst [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\nconst [busqueda, setBusqueda] = useState('');\nconst [modoDescripcion, setModoDescripcion] = useState(false);\nconst [recomendacion, setRecomendacion] = useState('');\n\nuseEffect(() => {\nfetch('/api/peliculas')\n.then(res => res.json())\n.then(data => {\nif (Array.isArray(data)) {\nsetPeliculas(data);\nsetPeliculasFiltradas(data);\n} else {\nconsole.error('Error: Los datos recibidos no son un array:', data);\nsetPeliculas([]);\nsetPeliculasFiltradas([]);\n}\n})\n.catch(err => {\nconsole.error('Error al obtener pel√≠culas:', err);\nsetPeliculas([]);\nsetPeliculasFiltradas([]);\n});\n}, []);\n\nconst handleBuscar = (e) => {\ne.preventDefault();\nconst texto = busqueda.toLowerCase();\nconst resultado = peliculas.filter(p =>\np.titulo.toLowerCase().includes(texto) ||\np.genero.toLowerCase().includes(texto) ||\np.titulo.toLowerCase().startsWith(texto)\n);\nsetPeliculasFiltradas(resultado);\nsetRecomendacion('');\n};\n\nconst handleBuscarPorDescripcion = async () => {\nsetRecomendacion('Pensando...');\ntry {\nconst res = await fetch('/api/recomendaciones', {\nmethod: 'POST',\nheaders: { 'Content-Type': 'application/json' },\nbody: JSON.stringify({ \nprompt: `Eres un asistente de recomendaciones de pel√≠culas que SIEMPRE responde en espa√±ol.\n\nDame una recomendaci√≥n basada en esta descripci√≥n: \"${busqueda}\". \n\nUsa solo pel√≠culas de este cat√°logo: ${peliculas.map(p => p.titulo).join(', ')}.\n\nIMPORTANTE: \n- Responde √öNICAMENTE en espa√±ol\n- Menciona los t√≠tulos de las pel√≠culas que recomiendes\n- Da una breve explicaci√≥n de por qu√© las recomiendas` \n})\n});\nconst data = await res.json();\nsetRecomendacion(data.recomendacion);\nconst seleccionadas = peliculas.filter(p =>\ndata.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n);\nif (seleccionadas.length > 0) {\nsetPeliculasFiltradas(seleccionadas);\n}\n} catch (err) {\nconsole.error('Error con IA:', err);\nsetRecomendacion('‚ùå Error al obtener recomendaci√≥n. Por favor, verifica que el servidor est√© funcionando.');\n}\n};\n\nreturn (\n<div className=\"App\">\n<h1 className=\"titulo\">CECYFLIX</h1>\n\n<form className=\"buscador\" onSubmit={handleBuscar}>\n<input\ntype=\"text\"\nplaceholder={modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por t√≠tulo o g√©nero'}\nvalue={busqueda}\nonChange={e => setBusqueda(e.target.value)}\n/>\n<button type=\"submit\">Buscar</button>\n<button type=\"button\" onClick={handleBuscarPorDescripcion} className=\"btn-ia\">\nBuscar por descripci√≥n IA\n</button>\n</form>\n\n{recomendacion && (\n<div className=\"bloque-recomendaciones\">\n<h2>‚ú® IA sugiere:</h2>\n<p>{recomendacion}</p>\n</div>\n)}\n\n<div className=\"galeria\">\n<h2>üé¨ Pel√≠culas</h2>\n<div className=\"grid\">\n{peliculasFiltradas.map((p, i) => (\n<div className=\"tarjeta\" key={i}>\n<img src={p.poster} alt={p.titulo} />\n<div className=\"info\">\n<h3>{p.titulo}</h3>\n<p>{p.genero}</p>\n<span>{p.descripcion?.slice(0, 60)}...</span>\n</div>\n</div>\n))}\n</div>\n</div>\n\n</div>\n);\n}\nexport default App;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}